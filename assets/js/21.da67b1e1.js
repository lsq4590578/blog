(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{343:function(_,t,v){"use strict";v.r(t);var a=v(4),e=Object(a.a)({},(function(){var _=this,t=_._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"_1-0-0-测试理论基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-0-测试理论基础"}},[_._v("#")]),_._v(" 1.0.0 测试理论基础")]),_._v(" "),t("h2",{attrs:{id:"_1-1-0测试概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-0测试概念"}},[_._v("#")]),_._v(" 1.1.0测试概念")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("单元测试")]),_._v(" "),t("p",[_._v("一般指测试程序的最小单元，如可以是一个类，一个方法等。通常由开发人员进行的测试，利用白盒测试对每一个分支进行测试。")]),_._v(" "),t("p",[_._v("白盒测试：一般是对代码进行测试，无界面的，验证代码的分支是否正确。可以理解为白盒测试是单元测试中一种测试手段。")])]),_._v(" "),t("li",[t("p",[_._v("集成测试")]),_._v(" "),t("p",[_._v("将多个单元测试集成一个模块进行 测试，单个单元测试没有问题，并不能保证多个单元测试集成在一起可以正常运行。按照概要设计说明文档进行的组装单元测试，生成模块进行测试。")])]),_._v(" "),t("li",[t("p",[_._v("系统测试")]),_._v(" "),t("p",[_._v("指在可以可视化接上面直接对系统进行输入验证输出的测试，系统测试可以做功能测试（黑盒测试），性能测试，安全测试，兼容性测试等")])]),_._v(" "),t("li",[t("p",[_._v("验收测试")]),_._v(" "),t("p",[_._v("阿尔法测试（非正式验收测试）：在开发环境，内部用户站在模拟实际操作环境下进行的测试。目的是为了评价软件的评价软件产品的FLURPS(即功能functional、局域化localization、可用性useful、可靠性reliablity、性能performance和支持support)")]),_._v(" "),t("p",[_._v("Beta测试：所谓验收测试是软件产品完成了"),t("a",{attrs:{href:"https://baike.baidu.com/item/%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/10921202",target:"_blank",rel:"noopener noreferrer"}},[_._v("功能测试"),t("OutboundLink")],1),_._v("和"),t("a",{attrs:{href:"https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95/3073399",target:"_blank",rel:"noopener noreferrer"}},[_._v("系统测试"),t("OutboundLink")],1),_._v("之后,在产品发布之前所进行的软件测试活动,它是技术测试的最后一个阶段，通过了验收测试，产品就会进入发布阶段。即是否满足"),t("a",{attrs:{href:"https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E%E4%B9%A6/10761323",target:"_blank",rel:"noopener noreferrer"}},[_._v("软件需求说明书"),t("OutboundLink")],1),_._v("中的确认标准。")])]),_._v(" "),t("li",[t("p",[_._v("静态测试")]),_._v(" "),t("p",[_._v("静态测试是不运行程序本身而寻找程序代码中可能存在的错误或评估程序代码的过程：如codereviwer")])]),_._v(" "),t("li",[t("p",[_._v("动态测试")]),_._v(" "),t("p",[_._v("实际运行被测程序，输入相应的测试实例，检查运行结果与预期结果的差异，判定执行结果是否符合要求，从而检验程序的正确性、可靠性和有效性，并分析系统运行效率和健壮性等性能")])]),_._v(" "),t("li",[t("p",[_._v("探索性测试")])]),_._v(" "),t("li",[t("p",[_._v("精准测试")])]),_._v(" "),t("li",[t("p",[_._v("接口测试")])]),_._v(" "),t("li",[t("p",[_._v("自动化测试")])]),_._v(" "),t("li",[t("p",[_._v("性能测试")])]),_._v(" "),t("li",[t("p",[_._v("安全测试")])])]),_._v(" "),t("h2",{attrs:{id:"_1-2-0-软件的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-0-软件的生命周期"}},[_._v("#")]),_._v(" 1.2.0 软件的生命周期")]),_._v(" "),t("p",[_._v("​\t\t\t从产生到最后维护的整个过程。")]),_._v(" "),t("p",[_._v("​\t\t\t需求调研-需求分析-需求评审-开发概要设计-详情设计-coding-单测-集成测试-系统测试-验收测试-运维的整个生命周期")]),_._v(" "),t("h2",{attrs:{id:"_1-3-0-测试的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-0-测试的方法"}},[_._v("#")]),_._v(" 1.3.0 测试的方法")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("等价类划分（不太懂）：等价类是指某个输入域的子集合.在该子集合中,各个输入数据对于揭露程序中的错误都是等效的.并合理地假定:测试某等价类的代表值就等于对这一类其它值的测试.因此,可以把全部输入数据合理划分为若干等价类,在每一个等价类中取一个数据作为测试的输入条件,就可以用少量代表性的测试数据.取得较好的测试结果.等价类划分可有两种不同的情况:有效等价类和无效等价类.")])]),_._v(" "),t("li",[t("p",[_._v("边界值")])]),_._v(" "),t("li",[t("p",[_._v("正交分解(不太懂)：可能因为大量的参数的组合而引起测试用例数量上的激增，同时，这些测试用例并没有明显的优先级上的差距，而测试人员又无法完成这么多数量的测试，就可以通过正交表来进行缩减一些用例，从而达到尽量少的用例覆盖尽量大的范围的可能性。")])]),_._v(" "),t("li",[t("p",[_._v("容错法")])]),_._v(" "),t("li",[t("p",[_._v("场景法")])]),_._v(" "),t("li",[t("p",[_._v("错误推断法")])]),_._v(" "),t("li",[t("p",[_._v("穷举法")])]),_._v(" "),t("li",[t("p",[_._v("因果图方法")]),_._v(" "),t("p",[_._v("白盒测试：逻辑覆盖、循环覆盖、基本路径覆盖")]),_._v(" "),t("p",[_._v("黑盒测试：边界值分析法、等价类划分、错误猜测法、因果图法、状态图法、测试大纲法、随机测试、场景法")])])]),_._v(" "),t("h2",{attrs:{id:"_1-4-0什么是软件测试-软件测试的目的与原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-0什么是软件测试-软件测试的目的与原则"}},[_._v("#")]),_._v(" 1.4.0什么是软件测试？软件测试的目的与原则")]),_._v(" "),t("h2",{attrs:{id:"_1-5-0测试用例的设计方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-0测试用例的设计方法"}},[_._v("#")]),_._v(" 1.5.0测试用例的设计方法")]),_._v(" "),t("h2",{attrs:{id:"_1-6-0软件测试的策略是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-0软件测试的策略是什么"}},[_._v("#")]),_._v(" 1.6.0软件测试的策略是什么")]),_._v(" "),t("p",[_._v("软件测试策略：在一定的软件测试标准、测试规范的指导下，依据测试项目的特定环境约束而规定的软件测试的原则、方式、方法的集合。")]),_._v(" "),t("h2",{attrs:{id:"_1-7-0测试计划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-0测试计划"}},[_._v("#")]),_._v(" 1.7.0测试计划")]),_._v(" "),t("p",[_._v("测试计划编写6要素（5W1H）：")]),_._v(" "),t("p",[_._v("why——为什么要进行这些测试；\nwhat—测试哪些方面，不同阶段的工作内容；\nwhen—测试不同阶段的起止时间；\nwhere—相应文档，缺陷的存放位置，测试环境等；\nwho—项目有关人员组成，安排哪些测试人员进行测试；\nhow—如何去做，使用哪些测试工具以及测试方法进行测试")]),_._v(" "),t("h1",{attrs:{id:"_2-0其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-0其他"}},[_._v("#")]),_._v(" 2.0其他")]),_._v(" "),t("h2",{attrs:{id:"_2-1-0你工作中遇到最难的一件事是什么-如何解决的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-0你工作中遇到最难的一件事是什么-如何解决的"}},[_._v("#")]),_._v(" 2.1.0你工作中遇到最难的一件事是什么？如何解决的？")]),_._v(" "),t("p",[_._v("北京有服务器突然无法访问厦门网关，一直提示404。（周五晚上还可以，但是到周六早上开始有些不能，有些可以）")]),_._v(" "),t("p",[_._v("盘查近期北京和厦门发布的代码的影响点")]),_._v(" "),t("p",[_._v("盘查近期是否有动过域名相关配置，或者nginx的相关配置")]),_._v(" "),t("p",[_._v("安装一个gevent的包一直出现无法安装的问题。")]),_._v(" "),t("p",[_._v("在hitools-server部署的时候出现了镜像一直无法生成的情况，原因是一直报:ERROR: Could not build wheels for gevent which use PEP 517 and cannot be installed directly")]),_._v(" "),t("p",[_._v("如何解决的:")]),_._v(" "),t("p",[_._v("1、考虑到换种方式安装于是试了5种：wheel下载后直接安装，源码安装，非二进制安装，pip install 安装都不行。也试了把gevent的版本将下来，20.9.0，然后还是没有用")]),_._v(" "),t("p",[_._v("2、查看版本兼容性，替换定制的dockerfile中内置了python的镜像，把这个降级到3.5（官方说的支持3.5），确实OK，但是出现了代码不兼容问题，比如f‘’.format的方式，在3.5是不支持的。容器构建已经OK了，通过postman请求服务发现未启动，进入容器中查看对应的日志，报f''找不到。google一下，3.5不支持f格式。所以不能降级，那只能升级，于是一个个升，升到3.9的时候奇迹般的OK了。")]),_._v(" "),t("p",[_._v("3.然后再次请求服务，还是没有启动，还有问题，进入服务器发现一个config.py文件无法找到，可是容器里面明明就有为什么找不到。使用ls的时候会发现config.py无权限访问。于是就在容器里面对config.py授权，没有用。")]),_._v(" "),t("h1",{attrs:{id:"_2-2-0-对什么工具进行二次开发过"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-0-对什么工具进行二次开发过"}},[_._v("#")]),_._v(" 2.2.0 对什么工具进行二次开发过？")]),_._v(" "),t("p",[_._v("做fiddler脚本录制生成json数据的这个过程是经历过很多的路程。")]),_._v(" "),t("p",[_._v("1.调研了httprunner，使用httprunner的框架写过自己脚本")]),_._v(" "),t("p",[_._v("2.在翼华最早接触到的是除了jmeter以外的性能，blazemeter ，是一个chrome插件，非开源的，点击chrome插件上的按钮可以录制到对应的请求参数，然后生成.jxm文件，导入到jmeter，buzybox类似，但brazemeter减少很多的弹框。当时比较年轻没有想到为什么点击这个可以录制到。")]),_._v(" "),t("p",[_._v("直到快乐学习的时候做接口自动化，才想起来之前有一个brazemeter可以点击某个按钮可以录制。因为没有开源，所以这个问题我一直没有答案，测试的群，技术的大牛也没有专门研究这一块的，后面我又接触到了metersphere的开源平台，里面有一个metersphere-chrome的插件用于录制请求，并且是开源的，然后我赶紧下载源码看这个代码，还找metersphere对接人，但不是技术也没给我解答这个问题，看源码里面有一些备注都写着sideex，是不是底层用sideex写的？又在github上继续找这个，结果却是也是开源的，打开sideex，原来metersphere的这个开源的chrome录制插件是居于sideex项目修改样式，然后直接变成自己的项目（都是套路啊）。而且有很全的sideex/api，用js写的。看了一下sideex源码，都是使用typescript编写的，然后通过监听，给页面添加元素，拼接用例以及拼接组装的用例对象并且保存文档的方式让数据展示出来。可以用来获取页面的xpath还有css等元素定位相关的内容，这些可以再触发的时候绑定到对应的数据库，给前端开发一个接口用来存css和xpath。然后把数据存起来，通过数据库中的内容去遍历这个xpath和css进行生成自动化脚本。")]),_._v(" "),t("h1",{attrs:{id:"_2-3-0最近关注的前沿技术"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-0最近关注的前沿技术"}},[_._v("#")]),_._v(" 2.3.0最近关注的前沿技术")]),_._v(" "),t("p",[_._v("httprunner 3.0，在3.0还没有出来前就已经比他这个思想早走了一步了，看到3.0的出来更加确定我的思路其实还是比较领先的。")]),_._v(" "),t("p",[_._v("IT大咖说https://www.itdks.com/Home/My/organizer?id=10267")]),_._v(" "),t("p",[_._v("TGO鲲鹏会")]),_._v(" "),t("p",[_._v("泰斯特相关会议")]),_._v(" "),t("p",[_._v("TESTERHOME")]),_._v(" "),t("p",[_._v("QEcon")]),_._v(" "),t("p",[_._v("DevSecuOps")]),_._v(" "),t("p",[_._v("OWSPA")]),_._v(" "),t("h1",{attrs:{id:"_3-0-http技术"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-0-http技术"}},[_._v("#")]),_._v(" 3.0 http技术")]),_._v(" "),t("h2",{attrs:{id:"_3-1-0-tcp-ip协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-0-tcp-ip协议"}},[_._v("#")]),_._v(" 3.1.0 TCP/IP协议")]),_._v(" "),t("h2",{attrs:{id:"_3-2-0-http协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-0-http协议"}},[_._v("#")]),_._v(" 3.2.0 HTTP协议")]),_._v(" "),t("p",[_._v("概念：http协议超文本传输协议是指服务端与客户端通讯的相关约定，约定的内容包含：URL，请求的方法，请求头部，请求参数，返回值等的约定的内容和格式")]),_._v(" "),t("p",[t("strong",[_._v("Content-Type")]),_._v("是指http/https发送信息至服务器时的内容编码类型，contentType用于表明发送数据流的类型，服务器根据编码类型使用特定的解析方式，获取数据流中的数据。")]),_._v(" "),t("p",[_._v("在网络请求中，常用的Content-Type有如下：\ntext/html, text/plain, text/css, text/javascript, image/jpeg, image/png, image/gif,\napplication/x-www-form-urlencoded, multipart/form-data, application/json, application/xml 等。")]),_._v(" "),t("p",[_._v("其中：text/html, text/plain, text/css, text/javascript, image/jpeg, image/png, image/gif, 都是常见的页面资源类型。")]),_._v(" "),t("p",[_._v("application/x-www-form-urlencoded, multipart/form-data, application/json, application/xml 这四个是ajax的请求，表单提交或上传文件的常用的资源类型。")]),_._v(" "),t("p",[_._v('form表单中可以定义enctype属性，该属性的含义是在发送到服务器之前应该如何对表单数据进行编码。默认的情况下，表单数据会编码为\n"application/x-www-form-unlencoded".')]),_._v(" "),t("p",[_._v("enctype常用的属性值如下：application/x-www-form-unlencoded： 在发送前编码所有字符(默认情况下)；\nmultipart/form-data, 不对字符编码。在使用文件上传时候，使用该值。")]),_._v(" "),t("p",[t("img",{attrs:{src:"D:%5C%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%5C%E9%9D%A2%E8%AF%95%5Cimage-20210821160120980.png",alt:"image-20210821160120980"}})]),_._v(" "),t("h2",{attrs:{id:"_3-3-0-三次握手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-0-三次握手"}},[_._v("#")]),_._v(" 3.3.0 三次握手")]),_._v(" "),t("h2",{attrs:{id:"_3-4-0-进程-线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-0-进程-线程"}},[_._v("#")]),_._v(" 3.4.0 进程/线程")]),_._v(" "),t("p",[_._v("线程和进程的区别")]),_._v(" "),t("p",[_._v("线程是车厢")]),_._v(" "),t("p",[_._v("进程是火车")]),_._v(" "),t("p",[_._v("一个进程包含多个线程，但是一个线程不能在多个进程中")]),_._v(" "),t("ul",[t("li",[_._v("线程在进程下进行（车厢在火车内）")]),_._v(" "),t("li",[_._v("一个进程可以包含多个线程（一辆火车有多节车厢）")]),_._v(" "),t("li",[_._v("不同进程间数据很难共享（一辆火车上的乘客很难换到另一辆火车上）")]),_._v(" "),t("li",[_._v("同一进程下，不同线程下数据很容易共享（同一辆火车换车厢很容易）")]),_._v(" "),t("li",[_._v("进程要比线程消耗更多的计算机资源（采用多列火车比多个车厢更耗资源）")]),_._v(" "),t("li",[_._v("进程间不会相互影响，一个线程挂掉整个进程挂掉。（一列火车不会影响火车，但是一节车厢着火影响到整个火车）")]),_._v(" "),t("li",[_._v("进程使用的内存地址可以上锁，一个线程使用某些共享内存时，其他线程必须等它结束，才能使用这一块内存。互斥锁")]),_._v(" "),t("li",[_._v("​    进程和线程都是一个时间段的描述，是CPU工作时间段的描述，不过是颗粒大小不同。")])]),_._v(" "),t("h2",{attrs:{id:"_3-5-0-什么是http协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-0-什么是http协议"}},[_._v("#")]),_._v(" 3.5.0 什么是http协议")]),_._v(" "),t("h2",{attrs:{id:"_3-6-0-http和https的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-0-http和https的区别"}},[_._v("#")]),_._v(" 3.6.0 http和https的区别")]),_._v(" "),t("h2",{attrs:{id:"_3-7-0-cookie和session的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-0-cookie和session的区别"}},[_._v("#")]),_._v(" 3.7.0 cookie和session的区别")]),_._v(" "),t("p",[_._v("概念：cookie本地缓存，缓存到本地，就是存到客户端。清空缓存")]),_._v(" "),t("p",[_._v("session临时会话，系统与用户进行交互的一种形式，每个不同用户都有创建临时会话，临时会话理解成聊天窗口，http无状态协议，通过session 进行关联起来，服务器与单独沟通的窗口，session在服务器器中访问。临时会话如何管理，sessionid管理，用户访问服务器放回sessionid,找到临时会话，进行临时通讯，拿到后存到cookie缓存到客户端")]),_._v(" "),t("p",[_._v("session有时效性，可以通过服务器去设置")]),_._v(" "),t("h2",{attrs:{id:"_3-8-0-get和post的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-0-get和post的区别"}},[_._v("#")]),_._v(" 3.8.0 get和post的区别")]),_._v(" "),t("p",[_._v("都是请求方法")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("传参区别：post->body，get->url参数上")])]),_._v(" "),t("li",[t("p",[_._v("大小不一样：get url有长度限制，post没有限制")])]),_._v(" "),t("li",[t("p",[_._v("安全性：get url添加参数进行传参，post是隐藏起来，会隐藏起来。")])]),_._v(" "),t("li",[t("p",[_._v("应用区别，get查询类，post用于持久化数据层的时候，比如增删改，变动数据数据的情况才用post请求")])])]),_._v(" "),t("h1",{attrs:{id:"_4-0网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-0网络"}},[_._v("#")]),_._v(" 4.0网络")]),_._v(" "),t("p",[t("img",{attrs:{src:"D:%5C%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%5C%E9%9D%A2%E8%AF%95%5C%E9%9D%A2%E8%AF%95.md",alt:"image-20210802091930428"}})]),_._v(" "),t("h2",{attrs:{id:"_4-1-0-osi七层模型和tcp-ip四层模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-0-osi七层模型和tcp-ip四层模型"}},[_._v("#")]),_._v(" 4.1.0 OSI七层模型和TCP/IP四层模型")]),_._v(" "),t("p",[_._v("OSI 七层模型：物理层，数据链路层，网络层，传输层，会话层，表示层，应用层")]),_._v(" "),t("p",[_._v("TCP/IP四层模型：（物理层，数据链路层-》合并成网络接口层），网际层，传输层，应用层 四层")]),_._v(" "),t("p",[_._v("这些层主要做什么内容?")]),_._v(" "),t("p",[_._v("物理层主要提供硬件相关设备，比如插座，网线，网口等硬件设备")]),_._v(" "),t("p",[_._v("数据链路层：将网络层传输下来的IP数据包组装成帧，并在相邻的节点的链路上传送帧。")]),_._v(" "),t("p",[_._v("网络层：选择合适的路由和交换节点，确保数据及时传送，主要包括IP协议")]),_._v(" "),t("p",[_._v("传输层：向主机进程提供通用的数据传输服务，该层主要有以下两种协议：")]),_._v(" "),t("ul",[t("li",[_._v("TCP：提供面向连接的，可靠的数据传输服务；")]),_._v(" "),t("li",[_._v("UDP：提供无连接的、尽最大努力的数据传输服务，但不保证数据传输的可靠性")])]),_._v(" "),t("p",[_._v("会话层：负责网络中的两节点之间建立、维持和终止通信，如服务器严重用户登录便是由会话层完成的。")]),_._v(" "),t("p",[_._v("表示层：主要负责数据格式的转换，如加密，解密，转换翻译，压缩和解压缩等")]),_._v(" "),t("p",[_._v("应用层：为应用程序提供交互服务，在互联网的应用协议有很多，DNS,HTTP,SMPT,POP3,FTP，telnet等协议")]),_._v(" "),t("h2",{attrs:{id:"_4-2-0-tcp和udp的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-0-tcp和udp的区别"}},[_._v("#")]),_._v(" 4.2.0 TCP和UDP的区别")]),_._v(" "),t("p",[t("strong",[_._v("对比如下")]),_._v("：")]),_._v(" "),t("p",[_._v("|                          | UDP |                                                                                          TCP |")]),_._v(" "),t("p",[_._v("是否连接            无连接                                                                                              面向连接")]),_._v(" "),t("p",[_._v("是否可靠            不可靠传输，不使用流量控制和拥塞控制                                可靠传输，使用流量控制和拥塞控制")]),_._v(" "),t("p",[_._v("是否有序             无序                                                                                                  有序，消息在传输过程中可能会乱序，TCP 会重新"),t("a",{attrs:{href:"https://www.nowcoder.com/jump/super-jump/word?word=%E6%8E%92%E5%BA%8F",target:"_blank",rel:"noopener noreferrer"}},[_._v("排序"),t("OutboundLink")],1)]),_._v(" "),t("p",[_._v("传输速度              快                                                                                                        慢")]),_._v(" "),t("p",[_._v("连接对象个数       支持一对一，一对多，多对一和多对多交互通信              只能是一对一通信")]),_._v(" "),t("p",[_._v("传输方式               面向报文                                                                                            面向字节流")]),_._v(" "),t("p",[_._v("首部开销               首部开销小，仅8字节                                                                     首部最小20字节，最大60字节")]),_._v(" "),t("p",[_._v("适用场景                适用于实时应用（IP电话、视频会议、直播等）                      适用于要求可靠传输的应用，例如文件传输")]),_._v(" "),t("p",[_._v("TCP的应用场景：HTTP/HTTPS，FTP文件传输")]),_._v(" "),t("p",[_._v("UDP的应用场景：广播铜须，视频，音频，媒体通讯")]),_._v(" "),t("p",[t("img",{attrs:{src:"D:%5C%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%5C%E9%9D%A2%E8%AF%95%5CTCPUDP%E5%BA%94%E7%94%A8.png",alt:"image-20210802100111202"}})]),_._v(" "),t("p",[t("strong",[_._v("总结")]),_._v("：")]),_._v(" "),t("p",[_._v("TCP 用于在传输层有必要实现可靠传输的情况，UDP 用于对高速传输和实时性有较高要求的通信。TCP 和 UDP 应该根据应用目的按需使用。")]),_._v(" "),t("ul",[t("li",[_._v("TCP建立连接和断开连接的过程？")]),_._v(" "),t("li",[_._v("HTTP协议的交互流程• HTTP和HTTPS的差异，SSL的交互流程？")]),_._v(" "),t("li",[_._v("TCP的滑动窗口协议有什么用？")]),_._v(" "),t("li",[_._v("HTTP协议都有哪些方法？")]),_._v(" "),t("li",[_._v("Socket交互的基本流程？")]),_._v(" "),t("li",[_._v("讲讲tcp协议（建连过程，慢启动，滑动窗口，七层模型）？")]),_._v(" "),t("li",[_._v("webservice协议（wsdl/soap格式，与restt办议的区别）？")]),_._v(" "),t("li",[_._v("说说Netty线程模型，什么是零拷贝？")]),_._v(" "),t("li",[_._v("TCP三次握手、四次挥手？")]),_._v(" "),t("li",[_._v("DNS解析过程？")]),_._v(" "),t("li",[_._v("TCP如何保证数据的可靠传输的？")])]),_._v(" "),t("h1",{attrs:{id:"_5-0-mysql数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-0-mysql数据库"}},[_._v("#")]),_._v(" 5. 0 mysql数据库")]),_._v(" "),t("ul",[t("li",[_._v("事务的基本要素")]),_._v(" "),t("li",[_._v("事务隔离级别")]),_._v(" "),t("li",[_._v("如何解决事务的并发问题(脏读，幻读)？")]),_._v(" "),t("li",[_._v("MVCC多版本并发控制？")]),_._v(" "),t("li",[_._v("binlog,redolog,undolog都是什么，起什么作用？")]),_._v(" "),t("li",[_._v("InnoDB的行锁/表锁？")]),_._v(" "),t("li",[_._v("myisam和innodb的区别，什么时候选择myisam？")]),_._v(" "),t("li",[_._v("为什么选择B+树作为索引结构？")]),_._v(" "),t("li",[_._v("索引B+树的叶子节点都可以存哪些东西？")]),_._v(" "),t("li",[_._v("查询在什么时候不走（预期中的）索引？")]),_._v(" "),t("li",[_._v("sql如何优化?")]),_._v(" "),t("li",[_._v("explain是如何解析sql的？")]),_._v(" "),t("li",[_._v("order by原理")])]),_._v(" "),t("h1",{attrs:{id:"_6-0语言类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-0语言类"}},[_._v("#")]),_._v(" 6.0语言类")]),_._v(" "),t("h2",{attrs:{id:"_6-1-0-javascript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-0-javascript"}},[_._v("#")]),_._v(" 6.1.0 javascript")]),_._v(" "),t("p",[_._v("js的原型链：")]),_._v(" "),t("p",[_._v("先从自己对象里面找，找不到再去原型对象找，还没有再去原型对象的原型对象找，这个操作叫做原型链")]),_._v(" "),t("p",[_._v("如：")]),_._v(" "),t("p",[_._v("prototype")]),_._v(" "),t("p",[t("strong",[t("strong",[_._v("proto")])]),_._v(" 实例对象的私有属性，指向的是构造噶不是故意的原型对象（prototype)。该原型链有一个自己的对象 （____"),t("em",[_._v("proto")]),_._v("）,层层向上，直到原型链对象为null，null没有原型，null为原型链的最后一个环节，js中的对象都是卫浴原型链最顶端的object 实例")])])}),[],!1,null,null,null);t.default=e.exports}}]);